{"version":3,"sources":["components/api.js","components/registerPage.js","components/loginPage.js","components/faculty/course_list.js","components/faculty/faculty_main.js","components/faculty/faculty_nav.js","components/student/student_course_list.js","components/student/student_main.js","components/student/student_nav.js","components/profile_update.js","components/profile_main.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["Api","RegisterPage","props","addUser","state","Username","alert","Email","match","Password","Type","setState","sending","fetch","method","headers","body","JSON","stringify","email","name","password","type","then","response","json","responseData","message","history","push","catch","error","console","event","this","target","value","className","style","width","height","marginTop","backgroundColor","justifyContent","textAlign","for","placeholder","onChange","handleChange","bind","handleChange1","handleChange2","onClick","to","paddingRight","Component","LoginPage","logMeIn","sessionStorage","setItem","userid","token","CourseList","componentDidMount","webCall","a","getItem","responseJson","datas","addCourse","courseId","courseName","courseDept","Description","courseRoom","waitlistCapacity","courseTeam","description","createdBy","clearInput","marginLeft","data-toggle","data-target","data-backdrop","data-keyboard","id","data-dismiss","handleChange3","handleChange4","handleChange5","handleChange6","map","item","i","padding","color","FacultyMain","authenticate","Authenticate","clear","window","location","reload","FacultyNav","href","confirm","StudentCourseList","webCall1","datas1","log","registerCourse","studentName","studentId","studentCourseId","StudentMain","StudentNav","ProfileUpdate","Name","PhoneNumber","phone","profileImg","About","about","City","city","Country","country","Company","company","School","school","HomeTown","hometown","Languages","languages","Gender","gender","profileUpdate","onFileChange","onSubmit","ImageUploadVisible","ImgUpload","evt","field","e","files","formData","FormData","append","axios","put","res","data","err","marginBottom","src","alt","borderRadius","display","marginRight","checked","ProfileMain","Profile","FacultyRoute","component","rest","render","pathname","from","StudentRoute","CommonRoute","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4795108a.chunk.js","sourcesContent":["const Api =\"https://nyxwolves.herokuapp.com\";\r\nexport default Api;","import React, { Component } from 'react';\r\nimport Api from './api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Username: '',\r\n            Email: '',\r\n            Password: '',\r\n            Type: '',\r\n            sending: false\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            Username: event.target.value,\r\n        })\r\n    }\r\n    handleChange1(event) {\r\n        this.setState({\r\n            Email: event.target.value,\r\n        })\r\n    }\r\n    handleChange2(event) {\r\n        this.setState({\r\n            Password: event.target.value,\r\n        })\r\n    }\r\n\r\n    addUser = () => {\r\n        // eslint-disable-next-line\r\n        var mailformat = /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/;\r\n\r\n        if (this.state.Username === \"\") {\r\n            alert(\"username is required\");\r\n        } else if (this.state.Email === \"\") {\r\n            alert(\"Email is required\");\r\n        } else if (!this.state.Email.match(mailformat)) {\r\n            alert(\"enter a valid email pattern\")\r\n        } else if (this.state.Password === \"\") {\r\n            alert(\"Password is required\");\r\n        } else if (this.state.Type === \"\") {\r\n            alert(\"Select an type\");\r\n        }\r\n        else {\r\n            this.setState({\r\n                sending: true,\r\n            })\r\n            fetch(Api + '/user/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.Email,\r\n                    name: this.state.Username,\r\n                    password: this.state.Password,\r\n                    type: this.state.Type\r\n                })\r\n            })\r\n                .then((response) => response.json())\r\n                .then((responseData) => {\r\n                    if (responseData.message === 'Registered successfully') {\r\n                        this.setState({\r\n                            sending: false,\r\n                        })\r\n                        alert(\"Login to continue!\")\r\n                        this.props.history.push('/')\r\n                    }\r\n                    else {\r\n                        alert(JSON.stringify(responseData.message))\r\n                        this.setState({\r\n                            sending: false,\r\n                        })\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    this.setState({\r\n                        sending: false,\r\n                    })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card container-fluid\" style={{\r\n                    width: \"50vh\", height: \"70vh\", marginTop: \"15vh\",\r\n                    backgroundColor: '#cccccc', justifyContent: 'space-evenly'\r\n                }}>\r\n                    <h4 style={{ textAlign: 'center' }}>SignUp</h4>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Username:</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter username\" name=\"uname\"\r\n                            value={this.state.Username}\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\"\r\n                            value={this.state.Email}\r\n                            onChange={this.handleChange1.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"pwd\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"pswd\"\r\n                            value={this.state.Password}\r\n                            onChange={this.handleChange2.bind(this)} />\r\n                    </div>\r\n                    <label for=\"radio\">Select Type:</label>\r\n                        <div className=\"container-fluid\">\r\n                        <div className=\"radio\">\r\n                            <label><input type=\"radio\" name=\"optradio\" \r\n                            onClick={()=>{\r\n                                this.setState({\r\n                                    Type:\"Student\"\r\n                                })\r\n                            }}\r\n                            />&ensp;Student</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <label><input type=\"radio\" name=\"optradio\" \r\n                             onClick={()=>{\r\n                                this.setState({\r\n                                    Type:\"Faculty\"\r\n                                })\r\n                            }}\r\n                            />&ensp;Faculty</label>\r\n                        </div>\r\n                        </div>\r\n                    {\r\n                        this.state.sending ?\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                <div className=\"spinner-border\"></div> Submitting...\r\n                        </button>\r\n                            :\r\n                            <button type=\"submit\" className=\"btn btn-primary\"\r\n                                onClick={() => {\r\n                                    this.addUser();\r\n                                }}\r\n                            >Submit</button>\r\n                    }\r\n                    <Link to=\"/\" style={{ textAlign: 'right', paddingRight: '10px' }}>Login</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React, { Component } from 'react';\r\nimport Api from './api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Email: '',\r\n            Password: '123',\r\n            sending: false\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            Email: event.target.value,\r\n        })\r\n    }\r\n    handleChange1(event) {\r\n        this.setState({\r\n            Password: event.target.value,\r\n        })\r\n    }\r\n\r\n    logMeIn = () => {\r\n        // eslint-disable-next-line\r\n                var mailformat = /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/;\r\n               \r\n                if (this.state.Email === \"\") {\r\n                    alert(\"Email is required\");\r\n                } else if (!this.state.Email.match(mailformat)) {\r\n                    alert(\"enter a valid email pattern\")\r\n                } else if (this.state.Password === \"\") {\r\n                    alert(\"Password is required\");\r\n                } \r\n                else {\r\n                    this.setState({\r\n                        sending: true,\r\n                    })\r\n                    fetch(Api + '/login', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: this.state.Email,\r\n                            password: this.state.Password\r\n                        })\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((responseData) => {\r\n                            if (responseData.message === \"Login successful\") {\r\n                                this.setState({\r\n                                    sending: false,\r\n                                })\r\n                                alert(responseData.message);\r\n                                sessionStorage.setItem(\"userId\", responseData.userid);\r\n                                sessionStorage.setItem(\"userToken\", responseData.token);\r\n                                sessionStorage.setItem(\"userEmail\", responseData.email);\r\n                                sessionStorage.setItem(\"userName\", responseData.name);\r\n                                sessionStorage.setItem(\"userType\", responseData.type);\r\n\r\n                                if(responseData.type === 'Student'){\r\n                                    this.props.history.push('/home/student')\r\n                                }else if(responseData.type === 'Faculty'){\r\n                                    this.props.history.push('/home/faculty')\r\n                                }else{\r\n                                    this.props.history.push('/')\r\n                                }\r\n                            }\r\n                            else {\r\n                                alert(responseData.message)\r\n                                this.setState({\r\n                                    sending: false,\r\n                                })\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                            this.setState({\r\n                                sending: false,\r\n                            })\r\n                        })\r\n                }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card container-fluid\" style={{width:\"50vh\",height:\"50vh\",marginTop:\"25vh\",\r\n                backgroundColor:'#cccccc',justifyContent:'space-evenly'}}>\r\n                    <h4 style={{textAlign:'center'}}>SignIn Host</h4>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Email:</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" \r\n                         value={this.state.Email}\r\n                         onChange={this.handleChange.bind(this)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"pwd\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name=\"pswd\" \r\n                         value={this.state.Password}\r\n                         onChange={this.handleChange1.bind(this)}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.sending ?\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                           <div className=\"spinner-border\"></div> Submitting...\r\n                        </button>\r\n                        :\r\n                        <button type=\"submit\" className=\"btn btn-primary\"\r\n                        onClick={()=>{\r\n                            this.logMeIn();\r\n                        }}\r\n                        >Submit</button>\r\n                    }\r\n                    <Link to=\"/register\" style={{textAlign:'right',paddingRight:'10px'}}>register</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport Api from '../api';\r\n\r\nclass CourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sending: true,\r\n            courseId: \"\",\r\n            courseName: \"\",\r\n            courseDept: \"\",\r\n            Description: \"\",\r\n            courseRoom: \"\",\r\n            waitlistCapacity: \"\",\r\n            courseTeam: \"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.webCall();\r\n    }\r\n\r\n    webCall = async () => {\r\n        fetch(Api + '/faculty/get/all/course', {\r\n            method: 'GET',\r\n            headers: {\r\n                'id': await sessionStorage.getItem('userId'),\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                this.setState({\r\n                    datas: responseJson,\r\n                    sending: false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    sending: false\r\n                })\r\n            });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            courseId: event.target.value,\r\n        })\r\n    }\r\n    handleChange1(event) {\r\n        this.setState({\r\n            courseName: event.target.value,\r\n        })\r\n    }\r\n    handleChange2(event) {\r\n        this.setState({\r\n            courseDept: event.target.value,\r\n        })\r\n    }\r\n    handleChange3(event) {\r\n        this.setState({\r\n            Description: event.target.value,\r\n        })\r\n    }\r\n    handleChange4(event) {\r\n        this.setState({\r\n            courseRoom: event.target.value,\r\n        })\r\n    }\r\n    handleChange5(event) {\r\n        this.setState({\r\n            waitlistCapacity: event.target.value,\r\n        })\r\n    }\r\n    handleChange6(event) {\r\n        this.setState({\r\n            courseTeam: event.target.value,\r\n        })\r\n    }\r\n\r\n    addCourse = async () => {\r\n        this.setState({\r\n            sending: true,\r\n        })\r\n        fetch(Api + '/faculty/add/new/course', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                courseId: await this.state.courseId,\r\n                courseName: await this.state.courseName,\r\n                courseDept: await this.state.courseDept,\r\n                description: await this.state.Description,\r\n                courseRoom: await this.state.courseRoom,\r\n                waitlistCapacity: await this.state.waitlistCapacity,\r\n                courseTeam: await this.state.courseTeam,\r\n                createdBy: await sessionStorage.getItem(\"userId\")\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (responseData.message === \"Course Added\") {\r\n                    this.webCall();\r\n                    alert(responseData.message)\r\n                    this.setState({\r\n                        sending: false,\r\n                    })\r\n                    this.webCall();\r\n                    this.clearInput();\r\n                }\r\n                else {\r\n                    this.webCall();\r\n                    alert(JSON.stringify(responseData.message+\" is already taken\"))\r\n                    this.setState({\r\n                        sending: false,\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    sending: false,\r\n                })\r\n            })\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({\r\n            courseId: \"\",\r\n            courseName: \"\",\r\n            courseDept: \"\",\r\n            Description: \"\",\r\n            courseRoom: \"\",\r\n            waitlistCapacity: \"\",\r\n            courseTeam: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.sending) {\r\n            return (\r\n                <div className=\"spinner-border\" style={{ marginLeft: '48%', marginTop: \"45vh\" }}></div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {/* modal start */}\r\n                <br></br>\r\n                <div className=\"row\" style={{ marginTop: \"10px\" }}>\r\n                    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\"\r\n                        data-backdrop=\"static\" data-keyboard=\"false\"\r\n                        style={{ marginLeft: \"auto\" }}>\r\n                        <i className=\"fas fa-plus\"></i>&ensp; New course\r\n                    </button>\r\n                    <div className=\"modal\" id=\"myModal\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n\r\n                                <div className=\"modal-header\">\r\n                                    <h4 className=\"modal-title\">Add Course</h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\r\n                                        onClick={() => { this.clearInput(); }}\r\n                                    >&times;</button>\r\n                                </div>\r\n\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"uname\">CourseId</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter courseId\" name=\"courseId\"\r\n                                            value={this.state.courseId}\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"uname\">CourseName</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter courseName\" name=\"courseName\"\r\n                                            value={this.state.courseName}\r\n                                            onChange={this.handleChange1.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"uname\">CourseDept</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter courseDept\" name=\"courseDept\"\r\n                                            value={this.state.courseDept}\r\n                                            onChange={this.handleChange2.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"uname\">Description</label>\r\n                                        <textarea className=\"form-control\" placeholder=\"Enter description\" name=\"description\"\r\n                                            value={this.state.Description}\r\n                                            onChange={this.handleChange3.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"uname\">CourseRoom</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter courseRoom\" name=\"courseRoom\"\r\n                                            value={this.state.courseRoom}\r\n                                            onChange={this.handleChange4.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"uname\">Waitlist Capacity</label>\r\n                                        <input type=\"number\" className=\"form-control\" placeholder=\"Enter waitlist capacity\" name=\"capacity\"\r\n                                            value={this.state.waitlistCapacity}\r\n                                            onChange={this.handleChange5.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"uname\">CourseTeam</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter courseTeam\" name=\"courseTeam\"\r\n                                            value={this.state.courseTeam}\r\n                                            onChange={this.handleChange6.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"modal-footer\">\r\n                                    {\r\n                                        this.state.sending ?\r\n                                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">\r\n                                                <div className=\"spinner-border\"></div> Adding..</button>\r\n                                            :\r\n                                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                                                onClick={() => { this.addCourse(); }}\r\n                                            >Add</button>\r\n                                    }\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\"\r\n                                        onClick={() => { this.clearInput(); }}\r\n                                    >Discard</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {/* modal end */}\r\n                <br></br>\r\n                \r\n                {/* list starts */}\r\n                {\r\n                    this.state.datas ?\r\n                        this.state.datas.map((item, i) =>\r\n                            <div className=\"card\" style={{ padding: \"5px\",marginTop:\"20px\" }}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <h6>{item.courseName}</h6>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <h6 style={{ color: 'grey', }}>{item.courseDept}</h6>\r\n                                     </div>\r\n                                </div>\r\n                                <hr></hr>\r\n                                <p>{item.description}</p>\r\n                                <hr></hr>\r\n                                <p>Team:{item.courseTeam}</p>\r\n                            </div>\r\n\r\n                        )\r\n                        :\r\n                        <div>\r\n                            <p  style={{ textAlign:'center',marginTop: \"45vh\" }}>\r\n                             No course to show\r\n                            </p>\r\n                        </div>\r\n                }\r\n                {/* list ends */}\r\n                <div style={{height:\"5vh\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseList;\r\n","import React, { Component } from 'react';\r\nimport Api from '../api';\r\nimport CourseList from './course_list';\r\n\r\nclass FacultyMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Authenticate: false,\r\n            Type:\"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.webCall();\r\n    }\r\n\r\n    //verifying token saved in server\r\n    webCall = () => {\r\n        fetch(Api + '/user/authenticate', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: sessionStorage.getItem(\"userToken\"),\r\n                id: sessionStorage.getItem(\"userId\"),\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (responseData.authenticate === 'true') {\r\n                    this.setState({\r\n                        Authenticate:true,\r\n                        Type: responseData.type\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        Authenticate: false,\r\n                        Type: \"none\"\r\n                    })\r\n                    alert(\"Logout and try again!\")\r\n                    sessionStorage.clear();\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                alert(\"Logout and try again!\")\r\n                    sessionStorage.clear();\r\n                    window.location.reload();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        // render of there is no authentication,initially renders\r\n        if(!this.state.Authenticate){\r\n            return(\r\n                <div className=\"spinner-border text-primary\" style={{marginLeft:\"50%\"}}></div>\r\n            )\r\n        }\r\n        //renders, if authenticate is true and user type is admin\r\n        else if(this.state.Type==='Faculty'){\r\n            return (\r\n                <div style={{marginTop:\"5vh\"}}>\r\n                    <CourseList/>\r\n                </div>\r\n            );\r\n        }\r\n        //renders, if authenticate is true,but user type is not admin \r\n        return(\r\n            <div>\r\n              <div className=\"spinner-border text-danger\" style={{marginLeft:\"50%\"}}></div>\r\n              <p style={{textAlign:'center'}}>Somewhat happened,logout and try again</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\nexport default FacultyMain;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FacultyMain from './faculty_main';\r\n\r\nclass FacultyNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <nav className=\"navbar navbar-inverse navbar-expand-md bg-dark navbar-dark fixed-top\">\r\n                    <a className=\"navbar-brand\" href=\"/\">NYXWolves - faculty</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                             &ensp; <Link to=\"/\" style={{color:'blue'}}>Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               &ensp; <Link to=\"/\" style={{color:'white'}}>About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            &ensp; <Link to=\"/\" style={{color:'white'}}>Contact</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\" style={{marginLeft:'auto'}}>\r\n                            <li className=\"nav-item\">\r\n                             &ensp; <Link to=\"/profile\" style={{color:'white'}}>\r\n                             <i className=\"fas fa-user\"></i>&ensp;\r\n                             </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               &ensp;<Link to=\"/\" style={{color:'white'}}\r\n                               onClick={()=>{\r\n                                window.confirm(\"Are you sure you wish to logout.?\") &&\r\n                                   sessionStorage.clear();}}\r\n                               >Logout</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <br></br>\r\n\r\n                <div className=\"container\">\r\n                    <FacultyMain/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FacultyNav;","import React, { Component } from 'react';\r\nimport Api from '../api';\r\n\r\nclass StudentCourseList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sending: true,\r\n            courseId: \"\",\r\n            courseName: \"\",\r\n            courseDept: \"\",\r\n            Description: \"\",\r\n            courseRoom: \"\",\r\n            waitlistCapacity: \"\",\r\n            courseTeam: \"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.webCall();\r\n        this.webCall1();\r\n    }\r\n\r\n    webCall = async () => {\r\n        fetch(Api + '/student/get/all/courses', {\r\n            method: 'GET',\r\n            headers: {\r\n                'id': await sessionStorage.getItem('userId'),\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                this.setState({\r\n                    datas: responseJson,\r\n                    sending: false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    sending: false\r\n                })\r\n            });\r\n    }\r\n\r\n    webCall1 = async () => {\r\n        fetch(Api + '/get/all/course', {\r\n            method: 'GET',\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                this.setState({\r\n                    datas1: responseJson,\r\n                    sending: false\r\n                })\r\n                console.log(responseJson)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    sending: false\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n    registerCourse = async (item) => {\r\n        this.setState({\r\n            sending: true,\r\n        })\r\n        fetch(Api + '/stuent/add/new/course', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                courseId: item.courseId,\r\n                courseName: item.courseName,\r\n                courseDept: item.courseDept,\r\n                description: item.description,\r\n                courseRoom: item.courseRoom,\r\n                waitlistCapacity: item.waitlistCapacity,\r\n                courseTeam: item.courseTeam,\r\n                createdBy: item.createdBy,\r\n                studentName: await sessionStorage.getItem(\"userName\"),\r\n                studentId: await sessionStorage.getItem(\"userId\"),\r\n                studentCourseId: item.courseId + \"-\" + await sessionStorage.getItem(\"userId\")\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (responseData.message === \"Course Registered\") {\r\n                    this.webCall();\r\n                    alert(responseData.message)\r\n                    this.setState({\r\n                        sending: false,\r\n                    })\r\n                    this.webCall();\r\n                }\r\n                else {\r\n                    this.webCall();\r\n                    alert(JSON.stringify(item.courseName + \" is already registered..!\"))\r\n                    this.setState({\r\n                        sending: false,\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    sending: false,\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.sending) {\r\n            return (\r\n                <div className=\"spinner-border\" style={{ marginLeft: '48%', marginTop: \"45vh\" }}></div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {/* modal start */}\r\n                <br></br>\r\n                <div className=\"row\" style={{ marginTop: \"10px\" }}>\r\n                    <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\"\r\n                        data-backdrop=\"static\" data-keyboard=\"false\"\r\n                        style={{ marginLeft: \"auto\" }}>\r\n                        <i className=\"fas fa-plus\"></i>&ensp; New course\r\n                    </button>\r\n                    <div className=\"modal\" id=\"myModal\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n\r\n                                <div className=\"modal-header\">\r\n                                    <h4 className=\"modal-title\">Register Course</h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                                </div>\r\n\r\n                                <div className=\"modal-body\">\r\n                                    {\r\n                                        this.state.datas1 ?\r\n                                            this.state.datas1.map((item, i) =>\r\n                                                <div className=\"card\" style={{ padding: \"5px\", marginTop: \"20px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <h6>{item.courseName}</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <h6 style={{ color: 'grey', }}>{item.courseDept}</h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr></hr>\r\n                                                    <p>Team:{item.courseTeam}</p>\r\n                                                    <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\r\n                                                    onClick={()=>{\r\n                                                        window.confirm(\"Are you sure you wish to add this course.?\") &&\r\n                                                        this.registerCourse(item);\r\n                                                    }}\r\n                                                    >Click here to register for this course</button>\r\n                                                </div>\r\n\r\n                                            )\r\n                                            :\r\n                                            <div>\r\n                                                <p style={{ textAlign: 'center', marginTop: \"45vh\" }}>\r\n                                                    No course to show\r\n                                                 </p>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" >Discard</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {/* modal end */}\r\n                <br></br>\r\n\r\n                {/* list starts */}\r\n                {\r\n                    this.state.datas ?\r\n                        this.state.datas.map((item, i) =>\r\n                            <div className=\"card\" style={{ padding: \"5px\", marginTop: \"20px\" }}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <h6>{item.courseName}</h6>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <h6 style={{ color: 'grey', }}>{item.courseDept}</h6>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                    <span className=\"fas fa-home\" style={{color:'grey'}}>&ensp; {item.courseRoom}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <hr></hr>\r\n                                <p>{item.description}</p>\r\n                                <hr></hr>\r\n                                <p>Team:{item.courseTeam}</p>\r\n                            </div>\r\n\r\n                        )\r\n                        :\r\n                        <div>\r\n                            <p style={{ textAlign: 'center', marginTop: \"45vh\" }}>\r\n                                No course to show\r\n                            </p>\r\n                        </div>\r\n                }\r\n                {/* list ends */}\r\n                <div style={{height:\"5vh\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentCourseList;\r\n","import React, { Component } from 'react';\r\nimport Api from '../api';\r\nimport StudentCourseList from './student_course_list';\r\n\r\nclass StudentMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Authenticate: false,\r\n            Type:\"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.webCall();\r\n    }\r\n\r\n    //verifying token saved in server\r\n    webCall = () => {\r\n        fetch(Api + '/user/authenticate', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: sessionStorage.getItem(\"userToken\"),\r\n                id: sessionStorage.getItem(\"userId\"),\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (responseData.authenticate === 'true') {\r\n                    this.setState({\r\n                        Authenticate:true,\r\n                        Type: responseData.type\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        Authenticate: false,\r\n                        Type: \"none\"\r\n                    })\r\n                    alert(\"Logout and try again!\")\r\n                    sessionStorage.clear();\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                alert(\"Logout and try again!\")\r\n                    sessionStorage.clear();\r\n                    window.location.reload();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        // render of there is no authentication,initially renders\r\n        if(!this.state.Authenticate){\r\n            return(\r\n                <div className=\"spinner-border text-primary\" style={{marginLeft:\"50%\"}}></div>\r\n            )\r\n        }\r\n        //renders, if authenticate is true and user type is admin\r\n        else if(this.state.Type==='Student'){\r\n            return (\r\n                <div style={{marginTop:\"5vh\"}}>\r\n                    <StudentCourseList/>\r\n                </div>\r\n            );\r\n        }\r\n        //renders, if authenticate is true,but user type is not admin \r\n        return(\r\n            <div>\r\n              <div className=\"spinner-border text-danger\" style={{marginLeft:\"50%\"}}></div>\r\n              <p style={{textAlign:'center'}}>Somewhat happened,logout and try again</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\nexport default StudentMain;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StudentMain from './student_main';\r\n\r\nclass StudentNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <nav className=\"navbar navbar-inverse navbar-expand-md bg-dark navbar-dark fixed-top\">\r\n                    <a className=\"navbar-brand\" href=\"/\">NYXWolves - student</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                             &ensp; <Link to=\"/\" style={{color:'white'}}>Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               &ensp; <Link to=\"/\" style={{color:'white'}}>About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            &ensp; <Link to=\"/\" style={{color:'white'}}>Contact</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\" style={{marginLeft:'auto'}}>\r\n                            <li className=\"nav-item\">\r\n                             &ensp; <Link to=\"/profile\" style={{color:'white'}}>\r\n                             <i className=\"fas fa-user\"></i>&ensp;\r\n                             </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               &ensp;<Link to=\"/\" style={{color:'white'}}\r\n                               onClick={()=>{\r\n                                window.confirm(\"Are you sure you wish to logout.?\") &&\r\n                                   sessionStorage.clear();}}\r\n                               >Logout</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <br></br>\r\n\r\n                <div className=\"container\">\r\n                     <StudentMain/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentNav;","import React, { Component } from 'react';\r\nimport Api from './api';\r\nimport axios from 'axios';\r\n\r\nclass ProfileUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFileChange = this.onFileChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state = {\r\n            sending: true,\r\n            ImageUploadVisible:false,\r\n            Name: \"\",\r\n            Email:\"\",\r\n            PhoneNumber:\"\",\r\n            profileImg:\"\",\r\n            ImgUpload:'',\r\n            About:\"\",\r\n            City:\"\",\r\n            Country:\"\",\r\n            Company:\"\",\r\n            School: \"\",\r\n            HomeTown: \"\",\r\n            Languages: \"\",\r\n            Gender: \"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.webCall();\r\n    }\r\n\r\n    webCall = async () => {\r\n        fetch(Api + '/get/an/user', {\r\n            method: 'GET',\r\n            headers: {\r\n                'id': await sessionStorage.getItem('userId'),\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                this.setState({\r\n                    sending: false,\r\n                    Name: responseJson[0].name,\r\n                    Email:responseJson[0].email,\r\n                    PhoneNumber:responseJson[0].phone,\r\n                    profileImg:responseJson[0].profileImg[0],\r\n                    About:responseJson[0].about,\r\n                    City:responseJson[0].city,\r\n                    Country:responseJson[0].country,\r\n                    Company:responseJson[0].company,\r\n                    School: responseJson[0].school,\r\n                    HomeTown: responseJson[0].hometown,\r\n                    Languages: responseJson[0].languages,\r\n                    Gender: responseJson[0].gender\r\n\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    sending: false\r\n                })\r\n            });\r\n    }\r\n\r\n    handleChange (evt, field) {\r\n        this.setState({ [field]: evt.target.value });\r\n    }\r\n\r\n    onFileChange(e) {\r\n        this.setState({ ImgUpload: e.target.files[0] });\r\n        this.onSubmit(e);\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({\r\n            sending: true\r\n        })\r\n        //  e.preventDefault()\r\n\r\n            var formData = new FormData()\r\n            formData.append('id',sessionStorage.getItem('userId'))\r\n            formData.append('profileImg', e.target.files[0]);\r\n            axios.put(Api + \"/update/profile\", formData, {\r\n            })\r\n                .then(res => {\r\n                    if(res.data.message === 'Profile Updated'){\r\n                        alert(res.data.message);\r\n                        this.setState({\r\n                            sending: false\r\n                        })\r\n                    } else{\r\n                        alert(res.data.message);\r\n                        this.setState({\r\n                            sending: false\r\n                        })\r\n                    }\r\n                    \r\n                }).catch((err) => {\r\n                   alert(\"Try again\");\r\n                   this.setState({\r\n                    sending: false\r\n                   })\r\n                   console.log(err)\r\n                  });\r\n    }\r\n\r\n    profileUpdate=async()=>{\r\n        this.setState({\r\n            sending: true,\r\n        })\r\n        fetch(Api + '/update/profile/details', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n            'id': await sessionStorage.getItem('userId'),\r\n            'name': this.state.Name,\r\n            'phone': this.state.PhoneNumber,\r\n            'email': this.state.Email,\r\n            'about': this.state.About,\r\n            'city': this.state.City,\r\n            'country': this.state.Country,\r\n            'company': this.state.Company,\r\n            'school': this.state.School,\r\n            'hometown': this.state.HomeTown,\r\n            'languages': this.state.Languages,\r\n            'gender': this.state.Gender\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (responseData.message === \"Profile Updated\") {\r\n                    this.setState({\r\n                        sending: false,\r\n                    })\r\n                    alert(responseData.message);\r\n                }\r\n                else {\r\n                    alert(responseData.message)\r\n                    this.setState({\r\n                        sending: false,\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                this.setState({\r\n                    sending: false,\r\n                })\r\n            })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container-fluid card\" style={{marginTop:\"50px\",width:\"70vh\",marginBottom:\"50px\"}}>\r\n                 <h6 style={{color:'grey'}}>Hi, {this.state.Name}</h6>\r\n                 <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                    {\r\n                        this.state.profileImg ?\r\n                        <img src={this.state.profileImg} \r\n                        alt='your profile' className='center'\r\n                        height={140}\r\n                        width={140}\r\n                        style={{\r\n                            borderRadius: 70, marginTop: \"2%\", marginBottom: \"2%\",\r\n                            display: 'block', marginLeft: 'auto', marginRight: 'auto'\r\n                        }}\r\n                       />\r\n                    :\r\n                    <img src=\"https://static.toiimg.com/thumb/72975551.cms?width=680&height=512&imgsize=881753\" \r\n                    alt='your profile' className='center'\r\n                        height={140}\r\n                        width={140}\r\n                        style={{\r\n                            borderRadius: 70, marginTop: \"2%\", marginBottom: \"2%\",\r\n                            display: 'block', marginLeft: 'auto', marginRight: 'auto'\r\n                        }}\r\n                    />\r\n                    }\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    {\r\n                    this.state.sending ?\r\n                        <div className=\"spinner-border\">.</div>\r\n                        :\r\n                    this.state.ImageUploadVisible ?\r\n                        <div className=\"form-group\">\r\n                        <input type=\"file\" onChange={this.onFileChange} />\r\n                    </div>\r\n                    :\r\n                    <button type=\"submit\" className=\"btn btn-primary\"\r\n                    onClick={()=>{this.setState({ImageUploadVisible:!this.state.ImageUploadVisible})}}\r\n                    >Change Photo</button>\r\n                    }\r\n                    </div>\r\n                 </div>\r\n                   \r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter name\" name=\"name\" \r\n                         value={this.state.Name}\r\n                         onChange={(event)=>this.handleChange(event, \"Name\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">PhoneNumber:</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter phone number\" name=\"phone\" \r\n                         value={this.state.PhoneNumber}\r\n                         onChange={(event)=>this.handleChange(event, \"PhoneNumber\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Email:</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter email\" name=\"email\" \r\n                         value={this.state.Email}\r\n                         onChange={(event)=>this.handleChange(event, \"Email\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">About:</label>\r\n                        <textarea  className=\"form-control\" placeholder=\"Enter about you\" name=\"about\" \r\n                         value={this.state.About}\r\n                         onChange={(event)=>this.handleChange(event, \"About\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">City:</label>\r\n                        <input  className=\"form-control\" placeholder=\"Enter City\" name=\"City\" \r\n                         value={this.state.City}\r\n                         onChange={(event)=>this.handleChange(event, \"City\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Country:</label>\r\n                        <input  className=\"form-control\" placeholder=\"Enter Country\" name=\"Country\" \r\n                         value={this.state.Country}\r\n                         onChange={(event)=>this.handleChange(event, \"Country\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Company:</label>\r\n                        <input  className=\"form-control\" placeholder=\"Enter Company\" name=\"Company\" \r\n                         value={this.state.Company}\r\n                         onChange={(event)=>this.handleChange(event, \"Company\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">School:</label>\r\n                        <input  className=\"form-control\" placeholder=\"Enter School\" name=\"School\" \r\n                         value={this.state.School}\r\n                         onChange={(event)=>this.handleChange(event, \"School\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">HomeTown:</label>\r\n                        <input  className=\"form-control\" placeholder=\"Enter HomeTown\" name=\"HomeTown\" \r\n                         value={this.state.HomeTown}\r\n                         onChange={(event)=>this.handleChange(event, \"HomeTown\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Languages:</label>\r\n                        <input className=\"form-control\" placeholder=\"Enter Languages\" name=\"Languages\" \r\n                         value={this.state.Languages}\r\n                         onChange={(event)=>this.handleChange(event, \"Languages\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"uname\">Gender:</label>\r\n                        <div className=\"container-fluid\">\r\n                        <div className=\"radio\">\r\n                            <label>\r\n                            <input type=\"radio\" name=\"optradio\"  checked={this.state.Gender === 'Male' ? true : false}\r\n                            onClick={()=>{\r\n                                this.setState({\r\n                                    Gender:\"Male\"\r\n                                })\r\n                            }}\r\n                            />\r\n                            &ensp;Male</label>\r\n                        </div>\r\n                        <div className=\"radio\">\r\n                            <label><input type=\"radio\" name=\"optradio\" checked={this.state.Gender === 'Female' ? true : false}\r\n                             onClick={()=>{\r\n                                this.setState({\r\n                                    Gender:\"Female\"\r\n                                })\r\n                            }}\r\n                            />&ensp;Female</label>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.sending ?\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                           <div className=\"spinner-border\"></div> Submitting...\r\n                        </button>\r\n                        :\r\n                        <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\"\r\n                         onClick={(e)=>{this.profileUpdate();}}\r\n                        >\r\n                            Submit</button>\r\n                        </div>\r\n                    }\r\n                    <br></br>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfileUpdate;","import React, { Component } from 'react';\r\nimport Api from './api';\r\nimport ProfileUpdate from './profile_update';\r\n\r\nclass ProfileMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Authenticate: false,\r\n            Type:\"\"\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.webCall();\r\n    }\r\n\r\n    //verifying token saved in server\r\n    webCall = () => {\r\n        fetch(Api + '/user/authenticate', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                token: sessionStorage.getItem(\"userToken\"),\r\n                id: sessionStorage.getItem(\"userId\"),\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (responseData.authenticate === 'true') {\r\n                    this.setState({\r\n                        Authenticate:true,\r\n                        Type: responseData.type\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        Authenticate: false,\r\n                        Type: \"none\"\r\n                    })\r\n                    alert(\"Logout and try again!\")\r\n                    sessionStorage.clear();\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                alert(\"Logout and try again!\")\r\n                    sessionStorage.clear();\r\n                    window.location.reload();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        // render of there is no authentication,initially renders\r\n        if(!this.state.Authenticate){\r\n            return(\r\n                <div className=\"spinner-border text-primary\" style={{marginLeft:\"50%\"}}></div>\r\n            )\r\n        }\r\n        //renders, if authenticate is true and user type is admin\r\n        else if(this.state.Authenticate){\r\n            return (\r\n                <div style={{marginTop:\"5vh\"}}>\r\n                    <ProfileUpdate/>\r\n                </div>\r\n            );\r\n        }\r\n        //renders, if authenticate is true,but user type is not admin \r\n        return(\r\n            <div>\r\n              <div className=\"spinner-border text-danger\" style={{marginLeft:\"50%\"}}></div>\r\n              <p style={{textAlign:'center'}}>Somewhat happened,logout and try again</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\nexport default ProfileMain;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileMain from './profile_main';\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <nav className=\"navbar navbar-inverse navbar-expand-md bg-dark navbar-dark fixed-top\">\r\n                    <a className=\"navbar-brand\" href=\"/\">NYXWolves</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                             &ensp; <Link \r\n                             to={\r\n                                 sessionStorage.getItem(\"userType\") === \"Faculty\" ?\r\n                                 \"/home/faculty\"\r\n                                 :\r\n                                 \"/home/student\"\r\n                             } \r\n                             style={{color:'white'}}>Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               &ensp; <Link to=\"/\" style={{color:'white'}}>About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            &ensp; <Link to=\"/\" style={{color:'white'}}>Contact</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\" style={{marginLeft:'auto'}}>\r\n                            <li className=\"nav-item\">\r\n                             &ensp; <Link to=\"/profile\" style={{color:'blue'}}>\r\n                             <i className=\"fas fa-user\"></i>&ensp;\r\n                             </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                               &ensp;<Link to=\"/\" style={{color:'white'}}\r\n                               onClick={()=>{\r\n                                window.confirm(\"Are you sure you wish to logout.?\") &&\r\n                                   sessionStorage.clear();}}\r\n                               >Logout</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <br></br>\r\n\r\n                <div className=\"container\">\r\n                     <ProfileMain/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport RegisterPage from './components/registerPage';\r\nimport LoginPage from './components/loginPage';\r\nimport FacultyNav from './components/faculty/faculty_nav';\r\nimport StudentNav from './components/student/student_nav';\r\nimport Profile from './components/profile';\r\n\r\nexport const FacultyRoute = ({ component: Component, ...rest }) => (\r\n\r\n  <Route {...rest}\r\n    render={props =>\r\n      sessionStorage.getItem(\"userType\") === 'Faculty' ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n    }\r\n  />\r\n);\r\n\r\nexport const StudentRoute = ({ component: Component, ...rest }) => (\r\n\r\n  <Route {...rest}\r\n    render={props =>\r\n      sessionStorage.getItem(\"userType\") === 'Student' ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n    }\r\n  />\r\n);\r\n\r\nexport const CommonRoute = ({ component: Component, ...rest }) => (\r\n\r\n  <Route {...rest}\r\n    render={props =>\r\n      sessionStorage.getItem(\"userType\") ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n    }\r\n  />\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <div>\r\n            <Switch>   \r\n\r\n              <Route exact path='/' component={LoginPage} />\r\n              <Route exact path='/register' component={RegisterPage} />\r\n\r\n              <FacultyRoute exact path='/home/faculty' component={FacultyNav} />\r\n              <StudentRoute exact path='/home/student' component={StudentNav} /> \r\n\r\n              <CommonRoute exact path='/profile' component={Profile} /> \r\n\r\n\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}